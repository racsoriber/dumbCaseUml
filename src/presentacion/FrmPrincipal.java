/*
 * TestFrm.java
 *
 * Created on 16 de junio de 2008, 11:08
 */

package presentacion;

import datos.FileUtil;
import generador.BuilderGenerador;
import generador.GeneradorCpp;
import generador.GeneradorJava;
import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.SwingUtilities;
import javax.swing.event.TreeModelEvent;
import javax.swing.event.TreeModelListener;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.event.TreeSelectionListener;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import presentacion.MiMouseListener;
import uml.UMLClase;
import uml.UMLElemento;
import uml.UMLPizarra;
import uml.UMLRelacion;


/**
 *
 * @author  Hugo
 */
public class FrmPrincipal extends javax.swing.JFrame implements ActionListener{
    UMLPizarra panel ;
    MiMouseListener manejador;
    //
    /** Creates new form TestFrm */
    public FrmPrincipal() {
        initComponents();
        //setSize( 600, 600 );
        panel = new UMLPizarra();
        manejador = new MiMouseListener( panel );
        panel.addListeners( manejador );
        panel.addVista( (VistaDiagrama)arbol );
        panelPrincipal.setViewportView( panel );
        //
        btnMouse.addActionListener( this );
        btnClase.addActionListener( this );
        btnRelacion.addActionListener( this );
        btnAsociacion.addActionListener( this );
        btnAgregacion.addActionListener( this );
        btnComposicion.addActionListener( this );
        btnGeneralizacion.addActionListener( this );
        btnDependencia.addActionListener( this );
        
        //menuCodigo
        menuGenerar.addActionListener( this );
        //menuEditar
        menuUndo.addActionListener( this );
        menuRedo.addActionListener( this );
        //
        arbol.addTreeSelectionListener( new MiTreeListener() );
        arbol.addMouseListener( new FormRatonListener() );
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Código Generado  ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jToolBar1 = new javax.swing.JToolBar();
        btnMouse = new javax.swing.JButton();
        btnClase = new javax.swing.JButton();
        btnRelacion = new javax.swing.JButton();
        btnAsociacion = new javax.swing.JButton();
        btnAgregacion = new javax.swing.JButton();
        btnComposicion = new javax.swing.JButton();
        btnGeneralizacion = new javax.swing.JButton();
        btnDependencia = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        arbol = new ArbolElementos();
        panelPrincipal = new javax.swing.JScrollPane();
        barraMenu = new javax.swing.JMenuBar();
        menuArchivo = new javax.swing.JMenu();
        menuGenerar = new javax.swing.JMenuItem();
        menuEditar = new javax.swing.JMenu();
        menuUndo = new javax.swing.JMenuItem();
        menuRedo = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        btnMouse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/seleccionar.png")));
        jToolBar1.add(btnMouse);

        btnClase.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/clase.png")));
        jToolBar1.add(btnClase);

        btnRelacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/relacion.png")));
        jToolBar1.add(btnRelacion);

        btnAsociacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/asociacion.png")));
        jToolBar1.add(btnAsociacion);

        btnAgregacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/agregacion.png")));
        jToolBar1.add(btnAgregacion);

        btnComposicion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/composicion.png")));
        jToolBar1.add(btnComposicion);

        btnGeneralizacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/herencia.png")));
        jToolBar1.add(btnGeneralizacion);

        btnDependencia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/dependencia.png")));
        jToolBar1.add(btnDependencia);

        jScrollPane1.setViewportView(arbol);

        panelPrincipal.setBorder(javax.swing.BorderFactory.createTitledBorder("Diagrama"));

        menuArchivo.setText("Codigo");
        menuGenerar.setText("Generar codigo");
        menuArchivo.add(menuGenerar);

        barraMenu.add(menuArchivo);

        menuEditar.setText("Editar");
        menuUndo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_MASK));
        menuUndo.setText("Deshacer");
        menuEditar.add(menuUndo);

        menuRedo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Y, java.awt.event.InputEvent.CTRL_MASK));
        menuRedo.setText("Rehacer");
        menuEditar.add(menuRedo);

        barraMenu.add(menuEditar);

        setJMenuBar(barraMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, 536, Short.MAX_VALUE))
                    .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 698, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, 378, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmPrincipal().setVisible(true);
            }
        });
    }
    
    
    
    void print( String str ) {
        System.out.println( str );
    }
    
    public void actionPerformed(ActionEvent e) {
        if( e.getSource() == btnMouse ){
            manejador.setRelacion( (byte)-1 );
            return;
        }
        
        if( e.getSource() == btnClase ){
            String nombre = JOptionPane.showInputDialog( "Nombre de clase" ,"clase1" );
            if( nombre != null ){
                UMLClase clase = new UMLClase( nombre ,UMLClase.CLASE );
                
                clase.setPosicion( 50 , 50 );
                if( panel.addElemento( clase ) ){
                    btnMouse.setSelected( true );
                }
            }
            return;
        }
        
        if( e.getSource() == btnRelacion ){
            manejador.setRelacion( UMLRelacion.RELACION );
            return;
        }
        
        if( e.getSource() == btnAsociacion ){
            manejador.setRelacion( UMLRelacion.ASOCIACION );
            return;
        }
        
        if( e.getSource() == btnAgregacion ){
            manejador.setRelacion( UMLRelacion.ASOCIACION_AGREGACION );
            return;
        }
        if( e.getSource() == btnComposicion ){
            manejador.setRelacion( UMLRelacion.ASOCIACION_COMPOSICION );
            return;
        }
        if( e.getSource() == btnGeneralizacion ){
            manejador.setRelacion( UMLRelacion.GENERALIZACION );
            return;
        }
        if( e.getSource() == btnDependencia ){
            manejador.setRelacion( UMLRelacion.DEPENDENCIA );
            return;
        }
        
        //barraMenu
        if( e.getSource() == menuGenerar ){
            generarCodigo();
            return;
        }
        
        if( e.getSource() == menuUndo ){
            print( "undo" );
            panel.undo();
            return;
        }
        
        if( e.getSource() == menuRedo ){
            print( "redo" );
            panel.redo();
            return;
        }
        //arbol
        if( e.getActionCommand().equals( "Propiedades" ) ){
            UMLElemento temp = panel.getElementoByName( arbol.getSelectionPath().getPathComponent( arbol.getSelectionPath().getPathCount() -1 ).toString() );
            if( !temp.isRelacion() ){
                PropiedadesClase props = new PropiedadesClase( this , true , (UMLClase) temp );
                if( props.showDialog() )
                    panel.addMemento();
                props = null;
            }else{
                PropiedadesRelacion props = new PropiedadesRelacion( this , true , (UMLRelacion) temp );
                if( props.showDialog() )
                    panel.addMemento();
                props = null;
            }
            return;
        }
        if( e.getActionCommand().equals( "Borrar" ) ){
            panel.removeElemento( arbol.getSelectionPath().getPathComponent( arbol.getSelectionPath().getPathCount() -1 ).toString() );
            return;
        }
    }
    
    private JPopupMenu getPopMenu(){
        JPopupMenu menuPop = new JPopupMenu();
        JMenuItem menuPropiedades = new JMenuItem( "Propiedades");
        JMenuItem menuBorrar = new JMenuItem( "Borrar");
        
        menuPropiedades.addActionListener( this );
        menuBorrar.addActionListener( this );
        menuPop.add( menuPropiedades );
        menuPop.add( menuBorrar );
        return menuPop;
    }
    
    private void generarCodigo(){
        Object[] mensaje = new Object[ 3 ];
        mensaje[ 0 ] = "Defina las preferencias";
        JComboBox combo = new JComboBox();
        combo.setEditable( true );
        combo.addItem( "Java" );
        combo.addItem( "C++" );
        mensaje[ 1 ] = combo;
        JCheckBox chkBox = new JCheckBox( "Crear accesos" );
        mensaje[ 2 ] = chkBox;
        String[] opciones = new String[]{ "Aceptar" , "Cancelar" } ;
        int result = JOptionPane.showOptionDialog( this ,
                mensaje ,
                "Generar codigo",
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.INFORMATION_MESSAGE,
                null,
                opciones,
                opciones[ 0 ]
                );
        if( result == 0  ){
            BuilderGenerador builder = null;
            if( combo.getSelectedItem().equals( "Java" ) )
                builder = new BuilderGenerador( new GeneradorJava() );
            else if( combo.getSelectedItem().equals( "C++" ) )
                builder = new BuilderGenerador( new GeneradorCpp() );
            
            for (UMLElemento elem : panel.getDiagrama().getElementos() ) {
                if( elem instanceof UMLClase ){
                    builder.setClase( (UMLClase) elem);
                    builder.procesarRelaciones( panel.getDiagrama().getElementos() );
                    builder.getGenerador().crearAccesos( chkBox.isSelected() );
                    //print( builder.getGenerador().generarCodigo() );
                    FileUtil.guardarTexto( "generado/" + builder.getGenerador().getPath() ,
                            builder.getGenerador().generarCodigo() );
                }
            }
            showInfoMessage( "Todas las tareas se completaron" );
        }
    }

    private void showInfoMessage(String string) {
        JOptionPane.showMessageDialog( this , string );
    }
    
    class MiTreeListener implements TreeSelectionListener{
        public void valueChanged(TreeSelectionEvent e) {
            panel.marcar( e.getPath().getPathComponent( e.getPath().getPathCount() -1 ).toString() );
        }
    }
    
    class FormRatonListener implements MouseListener{
        public void mousePressed(MouseEvent e) {
            if( SwingUtilities.isRightMouseButton( e ) ){
                getPopMenu().show( e.getComponent() , e.getX() , e.getY() );
            }
        }
        
        public void mouseClicked(MouseEvent e) {  }
        
        public void mouseReleased(MouseEvent e) {  }
        public void mouseEntered(MouseEvent e) {  }
        public void mouseExited(MouseEvent e) {   }
        
        
    }
    
    // Declaración de varibales -no modificar//GEN-BEGIN:variables
    private javax.swing.JTree arbol;
    private javax.swing.JMenuBar barraMenu;
    private javax.swing.JButton btnAgregacion;
    private javax.swing.JButton btnAsociacion;
    private javax.swing.JButton btnClase;
    private javax.swing.JButton btnComposicion;
    private javax.swing.JButton btnDependencia;
    private javax.swing.JButton btnGeneralizacion;
    private javax.swing.JButton btnMouse;
    private javax.swing.JButton btnRelacion;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JMenu menuArchivo;
    private javax.swing.JMenu menuEditar;
    private javax.swing.JMenuItem menuGenerar;
    private javax.swing.JMenuItem menuRedo;
    private javax.swing.JMenuItem menuUndo;
    private javax.swing.JScrollPane panelPrincipal;
    // Fin de declaración de variables//GEN-END:variables
    
}
